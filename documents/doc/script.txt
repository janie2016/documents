开发的优势
知道业务需求，实现就好，有问题就解决
有前期丰富的经验
具备基本需要用的技术
具备一定的架构思维
一般开发都没有问题


劣势
把已有的技术重复了一年又一年
具备一般开发的能力，但只是 一般的能力，技术不突出
做技术这一行，需要有钻研的精神，如果有，那么这条路适合一直走下去，如果没有，到达一定程度，再上升就非常难
考虑综合因素，同等能力的人，男的比女的更有机会获得
技术上升有瓶颈，
学习欲望和学习能力，
-- 如果压力适合，自己则会在这个环境下获得成长，如果压力不够，自己则会在这个环境下萎靡，如果压力过大，则可能会被压垮，所以只能在适合的环境下，自己才能获得成长，反之亦然，所以，这并不是一个很适合自己的环境
若换一行，则考虑，如果压力刚好，则习得经验，如果压力过大，则克服困难，赢来突破，如果压力不够，则自我学习，自我完善，这才是最适合的
随着一年一年过去，自己却没能拿出与年纪相匹配的能力来，开发上虽然没有什么压力，但是心里压力以及焦虑却随着时间与日俱增，不管是哪一行，优秀的人越来越多，不缺我一个，不管是做哪一行，只要你好好做，都会有个不错的结果，我更希望，是在做一件自己喜欢的事，一件自己觉得有意义的事情，能从这件事情当中汲取快乐和成长，如果你长期处于一个不能从当前这件事情中取得你想要的东西的时候，那么，你得考虑了
开发讲求深度，测试讲求广度
我比较喜欢用code的方式来达到自己的目的，让自己做某件事情更加方便，但是对于技术的钻研，技术的深度，就不会太多的了解，知其然，对其所以然不会太多的兴趣，
开发基本上以完成功能为主，而测试以发现问题为主，需要注意的边边角角比较多

我要扬长弊端

开发转测试最重要的是观念上的变化

测试的好处
有开发基础，可以考虑测试开发以及白盒测试，可能得到很好的发展
相对于转其他行比较容易
跟开发还是有关系，没有跨太远，对软件这一行还是有很大的热忱
有一定得开发经验和基础，知道开发思维，跟开发交流起来比较容易
具有学习精神和学习的能力，有信心在这一行做的出色
代码能力强，写代码做自动化测试优势很大；


转测试的坏处
测试不如开发收到尊敬
没有测试经验，入这一行，相当于0开始
物质压力，工资一下子跌了很多
要学很多东西，理论上以及测试工具
心理压力，他人的看法，转行的焦虑，自己能不能做好，转这行会不会是一个错误
缺乏测试经验，需要花时间和精力学习测试理论



当你打定一个主意的时候，过程当中就不要犹豫和动摇或者怀疑，既然认定了，就是经过深思熟虑的，只要内心笃定并坚持做下去，就一定会有成功的一天的

《测试之美》《Google软件测试之道》《测试之道》



如果是我，给初级测试员的薪水，除非对测试理论熟悉，学习能力超级强。
第一，注意别丢下开发技能，这是你日后提升的资本
第二，哪一行没有经验都是不行的，把你的工作经验拆出半年到一年包装为测试
第三，面试必问你为什么转测试，想好了怎么回答
第四，其次测试理论，测试方法，测试案例设计，测试工具，自动化测试框架都了解下

具体来说，因为是开发转过来的，稍微学一下测试开源框架应该就能在测试开发岗位上工作。也就是写一些简单的测试脚本和框架，其难度比一般开发人员开发一个小web应用更低。关键点是：记住你是开发转的，你的开发技能一定得用上。必须找一个用得上开发技能，需要你写代码的测试岗位，这是最佳选择。可以参考我之前回答里提过的自动化测试学习路线，里面有专门对开发转测试的情况的建议。传送门：https://www.zhihu.com/question/22211535/answer/205808844至于性能测试：1.脚本编写只需要花一个下午学习一个常用工具，就能编出来。2.性能测试策略，即使你不会，你们组里肯定有人会。一句话总结归根结底就是在不同负载下运行测试脚本持续不同的时间，并观察待测应用及服务器的性能。3.调优，一般是多个角色一起做。不会让测试人员挑大梁来调优。

 

先学自动化，性能其实是自动化的扩展，并没有什么神秘的，就是有并发的自动化测试，可能会牵涉到一些调度逻辑。而且有开发基础再好不过了，读几个库的源代码然后再封装框架会方便许多，比如Selenium里的locator实现如果你自己去读了很容易就会发现实际上只有cssSelector和xpath两种，其他的都是再封装。

  
  
技术路线漫长而且需要时间，我要做的就是从一个平台跳到另一个平台，每一个层次都有很多人停留
  

  我对这个岗位比较感兴趣，具体薪资可以先面试，面试完之后，然后再根据岗位技术和个人能力来匹配程度再来考虑

技术面通过之后，可以报自己的期望薪资
  
  